// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: proto/pala.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InnoPacket_PacketType int32

const (
	InnoPacket_TYPE_HEARTBEAT   InnoPacket_PacketType = 0
	InnoPacket_TYPE_INSTRUCTION InnoPacket_PacketType = 1
)

// Enum value maps for InnoPacket_PacketType.
var (
	InnoPacket_PacketType_name = map[int32]string{
		0: "TYPE_HEARTBEAT",
		1: "TYPE_INSTRUCTION",
	}
	InnoPacket_PacketType_value = map[string]int32{
		"TYPE_HEARTBEAT":   0,
		"TYPE_INSTRUCTION": 1,
	}
)

func (x InnoPacket_PacketType) Enum() *InnoPacket_PacketType {
	p := new(InnoPacket_PacketType)
	*p = x
	return p
}

func (x InnoPacket_PacketType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InnoPacket_PacketType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_pala_proto_enumTypes[0].Descriptor()
}

func (InnoPacket_PacketType) Type() protoreflect.EnumType {
	return &file_proto_pala_proto_enumTypes[0]
}

func (x InnoPacket_PacketType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InnoPacket_PacketType.Descriptor instead.
func (InnoPacket_PacketType) EnumDescriptor() ([]byte, []int) {
	return file_proto_pala_proto_rawDescGZIP(), []int{0, 0}
}

type InstructionPacket_ReportStatus int32

const (
	InstructionPacket_STATUS_SEND    InstructionPacket_ReportStatus = 0
	InstructionPacket_STATUS_ACK     InstructionPacket_ReportStatus = 1
	InstructionPacket_STATUS_RETRY   InstructionPacket_ReportStatus = 2
	InstructionPacket_STATUS_OFFLINE InstructionPacket_ReportStatus = 3
	InstructionPacket_STATUS_ERROR   InstructionPacket_ReportStatus = 4
)

// Enum value maps for InstructionPacket_ReportStatus.
var (
	InstructionPacket_ReportStatus_name = map[int32]string{
		0: "STATUS_SEND",
		1: "STATUS_ACK",
		2: "STATUS_RETRY",
		3: "STATUS_OFFLINE",
		4: "STATUS_ERROR",
	}
	InstructionPacket_ReportStatus_value = map[string]int32{
		"STATUS_SEND":    0,
		"STATUS_ACK":     1,
		"STATUS_RETRY":   2,
		"STATUS_OFFLINE": 3,
		"STATUS_ERROR":   4,
	}
)

func (x InstructionPacket_ReportStatus) Enum() *InstructionPacket_ReportStatus {
	p := new(InstructionPacket_ReportStatus)
	*p = x
	return p
}

func (x InstructionPacket_ReportStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstructionPacket_ReportStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_pala_proto_enumTypes[1].Descriptor()
}

func (InstructionPacket_ReportStatus) Type() protoreflect.EnumType {
	return &file_proto_pala_proto_enumTypes[1]
}

func (x InstructionPacket_ReportStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstructionPacket_ReportStatus.Descriptor instead.
func (InstructionPacket_ReportStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_pala_proto_rawDescGZIP(), []int{2, 0}
}

type InnoPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type InnoPacket_PacketType `protobuf:"varint,1,opt,name=type,proto3,enum=pb.InnoPacket_PacketType" json:"type,omitempty"`
	// Types that are assignable to Data:
	//
	//	*InnoPacket_HeartBeat
	//	*InnoPacket_Instruction
	Data        isInnoPacket_Data `protobuf_oneof:"data"`
	OfflineSend bool              `protobuf:"varint,4,opt,name=offlineSend,proto3" json:"offlineSend,omitempty"`
}

func (x *InnoPacket) Reset() {
	*x = InnoPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pala_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InnoPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnoPacket) ProtoMessage() {}

func (x *InnoPacket) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pala_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InnoPacket.ProtoReflect.Descriptor instead.
func (*InnoPacket) Descriptor() ([]byte, []int) {
	return file_proto_pala_proto_rawDescGZIP(), []int{0}
}

func (x *InnoPacket) GetType() InnoPacket_PacketType {
	if x != nil {
		return x.Type
	}
	return InnoPacket_TYPE_HEARTBEAT
}

func (m *InnoPacket) GetData() isInnoPacket_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *InnoPacket) GetHeartBeat() *HeartBeatPacket {
	if x, ok := x.GetData().(*InnoPacket_HeartBeat); ok {
		return x.HeartBeat
	}
	return nil
}

func (x *InnoPacket) GetInstruction() *InstructionPacket {
	if x, ok := x.GetData().(*InnoPacket_Instruction); ok {
		return x.Instruction
	}
	return nil
}

func (x *InnoPacket) GetOfflineSend() bool {
	if x != nil {
		return x.OfflineSend
	}
	return false
}

type isInnoPacket_Data interface {
	isInnoPacket_Data()
}

type InnoPacket_HeartBeat struct {
	HeartBeat *HeartBeatPacket `protobuf:"bytes,2,opt,name=heartBeat,proto3,oneof"`
}

type InnoPacket_Instruction struct {
	Instruction *InstructionPacket `protobuf:"bytes,3,opt,name=instruction,proto3,oneof"`
}

func (*InnoPacket_HeartBeat) isInnoPacket_Data() {}

func (*InnoPacket_Instruction) isInnoPacket_Data() {}

type HeartBeatPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantId int64  `protobuf:"varint,2,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	Ts       int64  `protobuf:"varint,3,opt,name=ts,proto3" json:"ts,omitempty"`
	Sign     string `protobuf:"bytes,4,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *HeartBeatPacket) Reset() {
	*x = HeartBeatPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pala_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeatPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeatPacket) ProtoMessage() {}

func (x *HeartBeatPacket) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pala_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeatPacket.ProtoReflect.Descriptor instead.
func (*HeartBeatPacket) Descriptor() ([]byte, []int) {
	return file_proto_pala_proto_rawDescGZIP(), []int{1}
}

func (x *HeartBeatPacket) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HeartBeatPacket) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

func (x *HeartBeatPacket) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *HeartBeatPacket) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

type InstructionPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string                         `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Pid       string                         `protobuf:"bytes,2,opt,name=pid,proto3" json:"pid,omitempty"`
	FromId    string                         `protobuf:"bytes,3,opt,name=fromId,proto3" json:"fromId,omitempty"`
	ToId      string                         `protobuf:"bytes,4,opt,name=toId,proto3" json:"toId,omitempty"`
	TimeStamp int64                          `protobuf:"varint,5,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"`
	Code      string                         `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
	Body      string                         `protobuf:"bytes,7,opt,name=body,proto3" json:"body,omitempty"`
	Report    InstructionPacket_ReportStatus `protobuf:"varint,8,opt,name=report,proto3,enum=pb.InstructionPacket_ReportStatus" json:"report,omitempty"`
}

func (x *InstructionPacket) Reset() {
	*x = InstructionPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pala_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstructionPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstructionPacket) ProtoMessage() {}

func (x *InstructionPacket) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pala_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstructionPacket.ProtoReflect.Descriptor instead.
func (*InstructionPacket) Descriptor() ([]byte, []int) {
	return file_proto_pala_proto_rawDescGZIP(), []int{2}
}

func (x *InstructionPacket) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *InstructionPacket) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *InstructionPacket) GetFromId() string {
	if x != nil {
		return x.FromId
	}
	return ""
}

func (x *InstructionPacket) GetToId() string {
	if x != nil {
		return x.ToId
	}
	return ""
}

func (x *InstructionPacket) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *InstructionPacket) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *InstructionPacket) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *InstructionPacket) GetReport() InstructionPacket_ReportStatus {
	if x != nil {
		return x.Report
	}
	return InstructionPacket_STATUS_SEND
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pala_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pala_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_pala_proto_rawDescGZIP(), []int{3}
}

func (x *Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_pala_proto protoreflect.FileDescriptor

var file_proto_pala_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x61, 0x6c, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x8d, 0x02, 0x0a, 0x0a, 0x49, 0x6e, 0x6e, 0x6f, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x6e, 0x6f, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x09,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x12, 0x39, 0x0a, 0x0b, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53,
	0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x22, 0x36, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x45, 0x41,
	0x52, 0x54, 0x42, 0x45, 0x41, 0x54, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x42, 0x06,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x61, 0x0a, 0x0f, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42,
	0x65, 0x61, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0xda, 0x02, 0x0a, 0x11, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x12, 0x3a, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x67, 0x0a,
	0x0c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a,
	0x0b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x45, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0x01, 0x12, 0x10,
	0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x54, 0x52, 0x59, 0x10, 0x02,
	0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49,
	0x4e, 0x45, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x22, 0x38, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x32, 0x2e, 0x0a, 0x04, 0x50, 0x61, 0x6c, 0x61, 0x12, 0x26, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64,
	0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x6e, 0x6f, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_pala_proto_rawDescOnce sync.Once
	file_proto_pala_proto_rawDescData = file_proto_pala_proto_rawDesc
)

func file_proto_pala_proto_rawDescGZIP() []byte {
	file_proto_pala_proto_rawDescOnce.Do(func() {
		file_proto_pala_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_pala_proto_rawDescData)
	})
	return file_proto_pala_proto_rawDescData
}

var file_proto_pala_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_pala_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_pala_proto_goTypes = []interface{}{
	(InnoPacket_PacketType)(0),          // 0: pb.InnoPacket.PacketType
	(InstructionPacket_ReportStatus)(0), // 1: pb.InstructionPacket.ReportStatus
	(*InnoPacket)(nil),                  // 2: pb.InnoPacket
	(*HeartBeatPacket)(nil),             // 3: pb.HeartBeatPacket
	(*InstructionPacket)(nil),           // 4: pb.InstructionPacket
	(*Response)(nil),                    // 5: pb.Response
}
var file_proto_pala_proto_depIdxs = []int32{
	0, // 0: pb.InnoPacket.type:type_name -> pb.InnoPacket.PacketType
	3, // 1: pb.InnoPacket.heartBeat:type_name -> pb.HeartBeatPacket
	4, // 2: pb.InnoPacket.instruction:type_name -> pb.InstructionPacket
	1, // 3: pb.InstructionPacket.report:type_name -> pb.InstructionPacket.ReportStatus
	2, // 4: pb.Pala.Send:input_type -> pb.InnoPacket
	5, // 5: pb.Pala.Send:output_type -> pb.Response
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_pala_proto_init() }
func file_proto_pala_proto_init() {
	if File_proto_pala_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_pala_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InnoPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pala_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeatPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pala_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstructionPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pala_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_pala_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*InnoPacket_HeartBeat)(nil),
		(*InnoPacket_Instruction)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_pala_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_pala_proto_goTypes,
		DependencyIndexes: file_proto_pala_proto_depIdxs,
		EnumInfos:         file_proto_pala_proto_enumTypes,
		MessageInfos:      file_proto_pala_proto_msgTypes,
	}.Build()
	File_proto_pala_proto = out.File
	file_proto_pala_proto_rawDesc = nil
	file_proto_pala_proto_goTypes = nil
	file_proto_pala_proto_depIdxs = nil
}
